{"ast":null,"code":"var _jsxFileName = \"/home/fernando/\\xC1rea de Trabalho/projetoDashImoveis/my-dashboard/src/components/Table/edittableInsumos.js\";\nimport React, { useEffect, useState } from 'react';\nimport MaterialTable from 'material-table';\nimport api from '../../services/api';\nexport default function MaterialTableDemo() {\n  const tableRef = React.createRef();\n  const [state, setState] = React.useState({\n    columns: [{\n      title: 'Código',\n      field: 'codigo',\n      align: 'left',\n      sorting: false\n    }, {\n      title: 'Descrição',\n      field: 'descricaoInsumo',\n      align: 'center',\n      sorting: false\n    }, {\n      title: 'Unidade',\n      field: 'unidade',\n      sorting: false,\n      align: 'center'\n    }, {\n      title: 'Tipo',\n      field: 'tipo',\n      sorting: false,\n      align: 'center'\n    }, {\n      title: 'Valor',\n      field: 'precoMed',\n      type: 'currency',\n      currencySetting: {\n        currencyCode: 'BRL',\n        locale: 'pt-BR'\n      },\n      align: 'center',\n      sorting: false\n    }],\n    data: []\n  });\n  const [dataApi, setDataApi] = useState([]);\n  useEffect(() => {\n    loadImoveis();\n  }, []);\n\n  async function loadImoveis() {\n    const response = await api.get('/insumos/proprios/search');\n    setState(prevState => {\n      const data = prevState.data;\n      console.log(response.data);\n      data.pop();\n      data.push(response.data);\n      return { ...prevState\n      };\n    });\n    var insumos = state.data[0].map(ap => {\n      return {\n        id: `${ap._id}`,\n        codigo: `${ap.nome}`,\n        preco: `${ap.preco}`,\n        descricaoInsumo: `${ap.areaUtil}`,\n        //valorm2: `${valorm2.toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })}`,\n        tipo: `${ap.tipo}`\n      };\n    });\n    setDataApi(insumos);\n  }\n\n  ;\n\n  async function handleDelete(oldData) {\n    try {\n      let id = oldData.id;\n      await api.delete(`/imovel/${id}`);\n      setDataApi(dataApi.filter(imovel => imovel.id !== id));\n    } catch (err) {\n      alert('erro ao deletar:' + err);\n    }\n  }\n\n  async function handleAdd(newData) {\n    try {\n      await api.post('/imovel', newData);\n    } catch (err) {\n      alert('erro ao Cadastrar:' + err);\n    }\n  }\n\n  async function handleUpdate(newData, oldData) {\n    try {\n      if (oldData) {\n        let id = oldData.id;\n        await api.put(`/imovel/${id}`, newData);\n      }\n    } catch (err) {\n      alert('erro ao Atualizar:' + err);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MaterialTable, {\n    tableRef: tableRef,\n    title: \"Criar insumo pr\\xF3prio\",\n    columns: state.columns,\n    data: dataApi,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve(handleAdd(newData));\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve(handleUpdate(newData, oldData));\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve(handleDelete(oldData));\n        }, 600);\n      })\n    },\n    localization: {\n      body: {\n        emptyDataSourceMessage: 'Nenhum registro para exibir',\n        addTooltip: 'adicionar',\n        deleteTooltip: 'excluir',\n        editTooltip: 'editar',\n        editcancelTooltip: 'cancelar',\n        editRow: {\n          saveTooltip: 'salvar',\n          cancelTooltip: 'cancelar',\n          deleteText: 'Tem certeza de que deseja excluir?'\n        }\n      },\n      grouping: {\n        groupedBy: 'Agrupado por:',\n        placeholder: 'Arraste os cabeçalhos aqui para agrupar!'\n      },\n      toolbar: {\n        searchTooltip: 'Pesquisar',\n        searchPlaceholder: 'Pesquisar',\n        showColumnsTitle: 'Mostrar colunas',\n        addRemoveColumns: 'Adicionar ou Remover Colunas'\n      },\n      pagination: {\n        labelRowsSelect: 'linhas',\n        labelDisplayedRows: '{count} de {from}-{to}',\n        firstTooltip: 'Primeira página',\n        previousTooltip: 'Página anterior',\n        nextTooltip: 'Próxima página',\n        lastTooltip: 'Última página'\n      }\n    },\n    options: {},\n    actions: [{\n      icon: 'refresh',\n      tooltip: 'Refresh Data',\n      isFreeAction: true,\n      onClick: () => loadImoveis()\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/fernando/Área de Trabalho/projetoDashImoveis/my-dashboard/src/components/Table/edittableInsumos.js"],"names":["React","useEffect","useState","MaterialTable","api","MaterialTableDemo","tableRef","createRef","state","setState","columns","title","field","align","sorting","type","currencySetting","currencyCode","locale","data","dataApi","setDataApi","loadImoveis","response","get","prevState","console","log","pop","push","insumos","map","ap","id","_id","codigo","nome","preco","descricaoInsumo","areaUtil","tipo","handleDelete","oldData","delete","filter","imovel","err","alert","handleAdd","newData","post","handleUpdate","put","onRowAdd","Promise","resolve","setTimeout","onRowUpdate","onRowDelete","body","emptyDataSourceMessage","addTooltip","deleteTooltip","editTooltip","editcancelTooltip","editRow","saveTooltip","cancelTooltip","deleteText","grouping","groupedBy","placeholder","toolbar","searchTooltip","searchPlaceholder","showColumnsTitle","addRemoveColumns","pagination","labelRowsSelect","labelDisplayedRows","firstTooltip","previousTooltip","nextTooltip","lastTooltip","icon","tooltip","isFreeAction","onClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,eAAe,SAASC,iBAAT,GAA6B;AACxC,QAAMC,QAAQ,GAAGN,KAAK,CAACO,SAAN,EAAjB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,KAAK,CAACE,QAAN,CAAe;AACrCQ,IAAAA,OAAO,EAAE,CACL;AAAEC,MAAAA,KAAK,EAAE,QAAT;AAAmBC,MAAAA,KAAK,EAAE,QAA1B;AAAoCC,MAAAA,KAAK,EAAE,MAA3C;AAAmDC,MAAAA,OAAO,EAAE;AAA5D,KADK,EAEL;AAAEH,MAAAA,KAAK,EAAE,WAAT;AAAsBC,MAAAA,KAAK,EAAE,iBAA7B;AAAgDC,MAAAA,KAAK,EAAE,QAAvD;AAAiEC,MAAAA,OAAO,EAAE;AAA1E,KAFK,EAGL;AAAEH,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,KAAK,EAAE,SAA3B;AAAsCE,MAAAA,OAAO,EAAE,KAA/C;AAAsDD,MAAAA,KAAK,EAAE;AAA7D,KAHK,EAIL;AAAEF,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE,MAAxB;AAAgCE,MAAAA,OAAO,EAAE,KAAzC;AAAgDD,MAAAA,KAAK,EAAE;AAAvD,KAJK,EAKL;AAAEF,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,KAAK,EAAE,UAAzB;AAAqCG,MAAAA,IAAI,EAAE,UAA3C;AAAuDC,MAAAA,eAAe,EAAE;AAAEC,QAAAA,YAAY,EAAE,KAAhB;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OAAxE;AAAkHL,MAAAA,KAAK,EAAE,QAAzH;AAAmIC,MAAAA,OAAO,EAAE;AAA5I,KALK,CAD4B;AAQrCK,IAAAA,IAAI,EAAE;AAR+B,GAAf,CAA1B;AAWA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,WAAf,GAA6B;AACzB,UAAMC,QAAQ,GAAG,MAAMnB,GAAG,CAACoB,GAAJ,CAAQ,0BAAR,CAAvB;AACAf,IAAAA,QAAQ,CAAEgB,SAAD,IAAe;AACpB,YAAMN,IAAI,GAAGM,SAAS,CAACN,IAAvB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACJ,IAArB;AACAA,MAAAA,IAAI,CAACS,GAAL;AACAT,MAAAA,IAAI,CAACU,IAAL,CAAUN,QAAQ,CAACJ,IAAnB;AACA,aAAO,EAAE,GAAGM;AAAL,OAAP;AACH,KANO,CAAR;AAOA,QAAIK,OAAO,GAAGtB,KAAK,CAACW,IAAN,CAAW,CAAX,EAAcY,GAAd,CAAmBC,EAAD,IAAQ;AACpC,aAAO;AACHC,QAAAA,EAAE,EAAG,GAAED,EAAE,CAACE,GAAI,EADX;AAEHC,QAAAA,MAAM,EAAG,GAAEH,EAAE,CAACI,IAAK,EAFhB;AAGHC,QAAAA,KAAK,EAAG,GAAEL,EAAE,CAACK,KAAM,EAHhB;AAIHC,QAAAA,eAAe,EAAG,GAAEN,EAAE,CAACO,QAAS,EAJ7B;AAKH;AACAC,QAAAA,IAAI,EAAG,GAAER,EAAE,CAACQ,IAAK;AANd,OAAP;AAQH,KATa,CAAd;AAUAnB,IAAAA,UAAU,CAACS,OAAD,CAAV;AACH;;AAAA;;AAED,iBAAeW,YAAf,CAA4BC,OAA5B,EAAqC;AAEjC,QAAI;AACA,UAAIT,EAAE,GAAGS,OAAO,CAACT,EAAjB;AACA,YAAM7B,GAAG,CAACuC,MAAJ,CAAY,WAAUV,EAAG,EAAzB,CAAN;AACAZ,MAAAA,UAAU,CAACD,OAAO,CAACwB,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACZ,EAAP,KAAcA,EAAvC,CAAD,CAAV;AACH,KAJD,CAIE,OAAOa,GAAP,EAAY;AACVC,MAAAA,KAAK,CAAC,qBAAqBD,GAAtB,CAAL;AACH;AACJ;;AAED,iBAAeE,SAAf,CAAyBC,OAAzB,EAAkC;AAC9B,QAAI;AACA,YAAM7C,GAAG,CAAC8C,IAAJ,CAAS,SAAT,EAAoBD,OAApB,CAAN;AAEH,KAHD,CAGE,OAAOH,GAAP,EAAY;AACVC,MAAAA,KAAK,CAAC,uBAAuBD,GAAxB,CAAL;AACH;AACJ;;AACD,iBAAeK,YAAf,CAA4BF,OAA5B,EAAqCP,OAArC,EAA8C;AAC1C,QAAI;AACA,UAAIA,OAAJ,EAAa;AACT,YAAIT,EAAE,GAAGS,OAAO,CAACT,EAAjB;AACA,cAAM7B,GAAG,CAACgD,GAAJ,CAAS,WAAUnB,EAAG,EAAtB,EAAyBgB,OAAzB,CAAN;AACH;AAEJ,KAND,CAME,OAAOH,GAAP,EAAY;AACVC,MAAAA,KAAK,CAAC,uBAAuBD,GAAxB,CAAL;AACH;AACJ;;AACD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AACI,IAAA,QAAQ,EAAExC,QADd;AAEI,IAAA,KAAK,EAAC,yBAFV;AAGI,IAAA,OAAO,EAAEE,KAAK,CAACE,OAHnB;AAII,IAAA,IAAI,EAAEU,OAJV;AAKI,IAAA,QAAQ,EAAE;AACNiC,MAAAA,QAAQ,EAAGJ,OAAD,IACN,IAAIK,OAAJ,CAAaC,OAAD,IAAa;AACrBC,QAAAA,UAAU,CAAC,MAAM;AACbD,UAAAA,OAAO,CAACP,SAAS,CAACC,OAAD,CAAV,CAAP;AACH,SAFS,EAEP,GAFO,CAAV;AAGH,OAJD,CAFE;AAONQ,MAAAA,WAAW,EAAE,CAACR,OAAD,EAAUP,OAAV,KACT,IAAIY,OAAJ,CAAaC,OAAD,IAAa;AACrBC,QAAAA,UAAU,CAAC,MAAM;AACbD,UAAAA,OAAO,CAACJ,YAAY,CAACF,OAAD,EAAUP,OAAV,CAAb,CAAP;AACH,SAFS,EAEP,GAFO,CAAV;AAGH,OAJD,CARE;AAaNgB,MAAAA,WAAW,EAAGhB,OAAD,IACT,IAAIY,OAAJ,CAAaC,OAAD,IAAa;AACrBC,QAAAA,UAAU,CAAC,MAAM;AACbD,UAAAA,OAAO,CAACd,YAAY,CAACC,OAAD,CAAb,CAAP;AACH,SAFS,EAEP,GAFO,CAAV;AAGH,OAJD;AAdE,KALd;AAyBI,IAAA,YAAY,EAAE;AACViB,MAAAA,IAAI,EAAE;AACFC,QAAAA,sBAAsB,EAAE,6BADtB;AAEFC,QAAAA,UAAU,EAAE,WAFV;AAGFC,QAAAA,aAAa,EAAE,SAHb;AAIFC,QAAAA,WAAW,EAAE,QAJX;AAKFC,QAAAA,iBAAiB,EAAE,UALjB;AAOFC,QAAAA,OAAO,EAAE;AACLC,UAAAA,WAAW,EAAE,QADR;AAELC,UAAAA,aAAa,EAAE,UAFV;AAGLC,UAAAA,UAAU,EAAE;AAHP;AAPP,OADI;AAcVC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,SAAS,EAAE,eADL;AAENC,QAAAA,WAAW,EAAE;AAFP,OAdA;AAkBVC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAE,WADV;AAELC,QAAAA,iBAAiB,EAAE,WAFd;AAGLC,QAAAA,gBAAgB,EAAE,iBAHb;AAILC,QAAAA,gBAAgB,EAAE;AAJb,OAlBC;AAwBVC,MAAAA,UAAU,EAAE;AACRC,QAAAA,eAAe,EAAE,QADT;AAERC,QAAAA,kBAAkB,EAAE,wBAFZ;AAGRC,QAAAA,YAAY,EAAE,iBAHN;AAIRC,QAAAA,eAAe,EAAE,iBAJT;AAKRC,QAAAA,WAAW,EAAE,gBALL;AAMRC,QAAAA,WAAW,EAAE;AANL;AAxBF,KAzBlB;AA0DI,IAAA,OAAO,EAAE,EA1Db;AA4DI,IAAA,OAAO,EAAE,CACL;AACIC,MAAAA,IAAI,EAAE,SADV;AAEIC,MAAAA,OAAO,EAAE,cAFb;AAGIC,MAAAA,YAAY,EAAE,IAHlB;AAIIC,MAAAA,OAAO,EAAE,MAAMjE,WAAW;AAJ9B,KADK,CA5Db;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAyEH","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport MaterialTable from 'material-table';\n\nimport api from '../../services/api';\n\nexport default function MaterialTableDemo() {\n    const tableRef = React.createRef();\n\n    const [state, setState] = React.useState({\n        columns: [\n            { title: 'Código', field: 'codigo', align: 'left', sorting: false, },\n            { title: 'Descrição', field: 'descricaoInsumo', align: 'center', sorting: false, },\n            { title: 'Unidade', field: 'unidade', sorting: false, align: 'center' },\n            { title: 'Tipo', field: 'tipo', sorting: false, align: 'center' },\n            { title: 'Valor', field: 'precoMed', type: 'currency', currencySetting: { currencyCode: 'BRL', locale: 'pt-BR' }, align: 'center', sorting: false, },\n        ],\n        data: []\n    });\n\n    const [dataApi, setDataApi] = useState([]);\n\n    useEffect(() => {\n        loadImoveis();\n    }, [])\n\n    async function loadImoveis() {\n        const response = await api.get('/insumos/proprios/search');\n        setState((prevState) => {\n            const data = prevState.data;\n            console.log(response.data)\n            data.pop();\n            data.push(response.data);\n            return { ...prevState };\n        });\n        var insumos = state.data[0].map((ap) => {\n            return {\n                id: `${ap._id}`,\n                codigo: `${ap.nome}`,\n                preco: `${ap.preco}`,\n                descricaoInsumo: `${ap.areaUtil}`,\n                //valorm2: `${valorm2.toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })}`,\n                tipo: `${ap.tipo}`,\n            }\n        })\n        setDataApi(insumos);\n    };\n\n    async function handleDelete(oldData) {\n\n        try {\n            let id = oldData.id;\n            await api.delete(`/imovel/${id}`)\n            setDataApi(dataApi.filter(imovel => imovel.id !== id));\n        } catch (err) {\n            alert('erro ao deletar:' + err)\n        }\n    }\n\n    async function handleAdd(newData) {\n        try {\n            await api.post('/imovel', newData)\n\n        } catch (err) {\n            alert('erro ao Cadastrar:' + err)\n        }\n    }\n    async function handleUpdate(newData, oldData) {\n        try {\n            if (oldData) {\n                let id = oldData.id\n                await api.put(`/imovel/${id}`, newData);\n            }\n\n        } catch (err) {\n            alert('erro ao Atualizar:' + err)\n        }\n    }\n    return (\n        <div>\n            <MaterialTable\n                tableRef={tableRef}\n                title=\"Criar insumo próprio\"\n                columns={state.columns}\n                data={dataApi}\n                editable={{\n                    onRowAdd: (newData) =>\n                        new Promise((resolve) => {\n                            setTimeout(() => {\n                                resolve(handleAdd(newData));\n                            }, 600);\n                        }),\n                    onRowUpdate: (newData, oldData) =>\n                        new Promise((resolve) => {\n                            setTimeout(() => {\n                                resolve(handleUpdate(newData, oldData));\n                            }, 600);\n                        }),\n                    onRowDelete: (oldData) =>\n                        new Promise((resolve) => {\n                            setTimeout(() => {\n                                resolve(handleDelete(oldData));\n                            }, 600);\n                        }),\n                }}\n                localization={{\n                    body: {\n                        emptyDataSourceMessage: 'Nenhum registro para exibir',\n                        addTooltip: 'adicionar',\n                        deleteTooltip: 'excluir',\n                        editTooltip: 'editar',\n                        editcancelTooltip: 'cancelar',\n\n                        editRow: {\n                            saveTooltip: 'salvar',\n                            cancelTooltip: 'cancelar',\n                            deleteText: 'Tem certeza de que deseja excluir?'\n                        },\n                    },\n                    grouping: {\n                        groupedBy: 'Agrupado por:',\n                        placeholder: 'Arraste os cabeçalhos aqui para agrupar!'\n                    },\n                    toolbar: {\n                        searchTooltip: 'Pesquisar',\n                        searchPlaceholder: 'Pesquisar',\n                        showColumnsTitle: 'Mostrar colunas',\n                        addRemoveColumns: 'Adicionar ou Remover Colunas'\n                    },\n                    pagination: {\n                        labelRowsSelect: 'linhas',\n                        labelDisplayedRows: '{count} de {from}-{to}',\n                        firstTooltip: 'Primeira página',\n                        previousTooltip: 'Página anterior',\n                        nextTooltip: 'Próxima página',\n                        lastTooltip: 'Última página'\n                    }\n                }}\n                options={{\n                }}\n                actions={[\n                    {\n                        icon: 'refresh',\n                        tooltip: 'Refresh Data',\n                        isFreeAction: true,\n                        onClick: () => loadImoveis(),\n                    }\n                ]}\n            />\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}