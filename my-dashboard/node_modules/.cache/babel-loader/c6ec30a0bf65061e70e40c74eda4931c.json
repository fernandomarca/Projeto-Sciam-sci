{"ast":null,"code":"var _jsxFileName = \"/home/fernando/\\xC1rea de Trabalho/DashBoardBootstrap/react/git/material-dashboard-react/my-dashboard/src/components/Charts/RandomLine/index.js\";\nimport React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport ReactDOM from 'react-dom';\nconst initialState = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'My First dataset',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(75,192,192,0.4)',\n    borderColor: 'rgba(75,192,192,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(75,192,192,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: [65, 59, 80, 81, 56, 55, 40]\n  }]\n};\n\nconst RandomLine = () => {\n  const [state, setState] = useState();\n  setState(initialState);\n  setInterval(function () {\n    var oldDataSet = state.datasets[0];\n    var newData = [];\n\n    for (var x = 0; x < state.labels.length; x++) {\n      newData.push(Math.floor(Math.random() * 100));\n    }\n\n    var newDataSet = { ...oldDataSet\n    };\n    newDataSet.data = newData;\n    var newState = { ...initialState,\n      datasets: [newDataSet]\n    };\n    setState(newState);\n  }, 5000);\n  ReactDOM.render( /*#__PURE__*/React.createElement(Line, {\n    data: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(RandomLine, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default RandomLine;","map":{"version":3,"sources":["/home/fernando/Área de Trabalho/DashBoardBootstrap/react/git/material-dashboard-react/my-dashboard/src/components/Charts/RandomLine/index.js"],"names":["React","useState","Line","ReactDOM","initialState","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","RandomLine","state","setState","setInterval","oldDataSet","newData","x","length","push","Math","floor","random","newDataSet","newState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CADW;AAEnBC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,kBADT;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,WAAW,EAAE,GAHf;AAIEC,IAAAA,eAAe,EAAE,sBAJnB;AAKEC,IAAAA,WAAW,EAAE,oBALf;AAMEC,IAAAA,cAAc,EAAE,MANlB;AAOEC,IAAAA,UAAU,EAAE,EAPd;AAQEC,IAAAA,gBAAgB,EAAE,GARpB;AASEC,IAAAA,eAAe,EAAE,OATnB;AAUEC,IAAAA,gBAAgB,EAAE,oBAVpB;AAWEC,IAAAA,oBAAoB,EAAE,MAXxB;AAYEC,IAAAA,gBAAgB,EAAE,CAZpB;AAaEC,IAAAA,gBAAgB,EAAE,CAbpB;AAcEC,IAAAA,yBAAyB,EAAE,oBAd7B;AAeEC,IAAAA,qBAAqB,EAAE,qBAfzB;AAgBEC,IAAAA,qBAAqB,EAAE,CAhBzB;AAiBEC,IAAAA,WAAW,EAAE,CAjBf;AAkBEC,IAAAA,cAAc,EAAE,EAlBlB;AAmBEC,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAnBR,GADQ;AAFS,CAArB;;AA2BA,MAAMC,UAAU,GAAG,MAAM;AAEvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,EAAlC;AAEA2B,EAAAA,QAAQ,CAACxB,YAAD,CAAR;AAEAyB,EAAAA,WAAW,CAAC,YAAY;AACtB,QAAIC,UAAU,GAAGH,KAAK,CAACrB,QAAN,CAAe,CAAf,CAAjB;AACA,QAAIyB,OAAO,GAAG,EAAd;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACtB,MAAN,CAAa4B,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5CD,MAAAA,OAAO,CAACG,IAAR,CAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AACD;;AAED,QAAIC,UAAU,GAAG,EACf,GAAGR;AADY,KAAjB;AAIAQ,IAAAA,UAAU,CAACb,IAAX,GAAkBM,OAAlB;AAEA,QAAIQ,QAAQ,GAAG,EACb,GAAGnC,YADU;AAEbE,MAAAA,QAAQ,EAAE,CAACgC,UAAD;AAFG,KAAf;AAKAV,IAAAA,QAAQ,CAACW,QAAD,CAAR;AACD,GApBU,EAoBR,IApBQ,CAAX;AAsBApC,EAAAA,QAAQ,CAACqC,MAAT,eAAgB,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CApCD;;AAsCA,eAAeD,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport ReactDOM from 'react-dom';\n\nconst initialState = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [\n    {\n      label: 'My First dataset',\n      fill: false,\n      lineTension: 0.1,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)',\n      borderCapStyle: 'butt',\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderJoinStyle: 'miter',\n      pointBorderColor: 'rgba(75,192,192,1)',\n      pointBackgroundColor: '#fff',\n      pointBorderWidth: 1,\n      pointHoverRadius: 5,\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\n      pointHoverBorderWidth: 2,\n      pointRadius: 1,\n      pointHitRadius: 10,\n      data: [65, 59, 80, 81, 56, 55, 40]\n    }\n  ]\n};\n\nconst RandomLine = () => {\n\n  const [state, setState] = useState()\n\n  setState(initialState);\n\n  setInterval(function () {\n    var oldDataSet = state.datasets[0];\n    var newData = [];\n\n    for (var x = 0; x < state.labels.length; x++) {\n      newData.push(Math.floor(Math.random() * 100));\n    }\n\n    var newDataSet = {\n      ...oldDataSet\n    };\n\n    newDataSet.data = newData;\n\n    var newState = {\n      ...initialState,\n      datasets: [newDataSet]\n    };\n\n    setState(newState);\n  }, 5000);\n\n  ReactDOM.render(<Line data={state} />)\n\n  return (\n    <div>\n      <h2></h2>\n      <RandomLine />\n    </div>\n  );\n}\n\nexport default RandomLine"]},"metadata":{},"sourceType":"module"}