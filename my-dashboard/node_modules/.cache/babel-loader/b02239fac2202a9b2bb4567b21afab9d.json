{"ast":null,"code":"var _jsxFileName = \"/home/fernando/\\xC1rea de Trabalho/projetoDashImoveis/my-dashboard/src/components/Charts/Bar/ChartBar2.js\";\nimport React, { useState, useEffect } from 'react';\nimport { HorizontalBar } from 'react-chartjs-2';\nimport api from '../../../services/api';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\n\nconst ChartBar1 = () => {\n  const [dataApi, setDataApi] = useState([]);\n  useEffect(() => {\n    load();\n  }, []);\n\n  async function load() {\n    const response = await api.get('/imovel');\n    setDataApi(response.data);\n  }\n\n  ; //reduce para extrair somente os bairros não repetidos\n\n  const bairrosReduce = dataApi.reduce((acc, ap) => {\n    if (!acc.includes(ap.bairro)) {\n      acc.push(ap.bairro);\n    }\n\n    return acc;\n  }, []).sort(); //gráfico valor médio do m2 por bairro\n  //valor médio do m2 por bairro: soma(preco/area)/qtdaAptos\n\n  const valorM2Bairro = [];\n  bairrosReduce.map((bairro, index) => {\n    const apto = dataApi.filter(ap => ap.bairro.includes(bairrosReduce[index]));\n    let custoM2 = apto.reduce((acc, apto, index) => {\n      acc = acc + apto.preco / apto.areaUtil; //console.log(index)\n\n      return acc;\n    }, 0);\n    return valorM2Bairro.push((custoM2 / apto.length).toFixed(2));\n  }); //console.log(valorM2Bairro)\n\n  const barData = {\n    labels: [...bairrosReduce],\n    datasets: [{\n      label: 'Valor do m² por Bairro',\n      backgroundColor: 'rgb(196, 3, 3,0.2)',\n      borderColor: 'rgb(196, 3, 3)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgb(196, 3, 3,0.4)',\n      hoverBorderColor: 'rgb(196, 3, 3)',\n      data: [...valorM2Bairro]\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HorizontalBar, {\n    data: barData,\n    width: 100,\n    height: 50,\n    options: {\n      plugins: {\n        datalabels: {\n          color: 'black',\n          anchor: 'end',\n          rotation: 0,\n          labels: {\n            title: {\n              font: {\n                weight: 'normal'\n              }\n            },\n            value: {\n              color: 'black'\n            }\n          }\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default ChartBar1;","map":{"version":3,"sources":["/home/fernando/Área de Trabalho/projetoDashImoveis/my-dashboard/src/components/Charts/Bar/ChartBar2.js"],"names":["React","useState","useEffect","HorizontalBar","api","ChartDataLabels","ChartBar1","dataApi","setDataApi","load","response","get","data","bairrosReduce","reduce","acc","ap","includes","bairro","push","sort","valorM2Bairro","map","index","apto","filter","custoM2","preco","areaUtil","length","toFixed","barData","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","plugins","datalabels","color","anchor","rotation","title","font","weight","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { HorizontalBar } from 'react-chartjs-2';\nimport api from '../../../services/api'\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\n\nconst ChartBar1 = () => {\n    const [dataApi, setDataApi] = useState([]);\n\n    useEffect(() => {\n        load();\n    }, []);\n\n    async function load() {\n        const response = await api.get('/imovel');\n        setDataApi(response.data)\n    };\n\n    //reduce para extrair somente os bairros não repetidos\n    const bairrosReduce = dataApi.reduce((acc, ap) => {\n        if (!acc.includes(ap.bairro)) {\n            acc.push(ap.bairro);\n        }\n        return acc;\n    }, []).sort()\n\n    //gráfico valor médio do m2 por bairro\n    //valor médio do m2 por bairro: soma(preco/area)/qtdaAptos\n    const valorM2Bairro = []\n    bairrosReduce.map((bairro, index) => {\n        const apto = dataApi.filter((ap) => ap.bairro.includes(bairrosReduce[index]))\n        let custoM2 = apto.reduce((acc, apto, index) => {\n            acc = acc + (apto.preco / apto.areaUtil);\n            //console.log(index)\n            return acc\n        }, 0)\n        return valorM2Bairro.push((custoM2 / apto.length).toFixed(2))\n    })\n    //console.log(valorM2Bairro)\n\n    const barData = {\n        labels: [...bairrosReduce],\n        datasets: [\n            {\n                label: 'Valor do m² por Bairro',\n                backgroundColor: 'rgb(196, 3, 3,0.2)',\n                borderColor: 'rgb(196, 3, 3)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgb(196, 3, 3,0.4)',\n                hoverBorderColor: 'rgb(196, 3, 3)',\n                data: [...valorM2Bairro]\n            }\n        ]\n    };\n\n    return (\n        <div>\n            <HorizontalBar\n                data={barData}\n                width={100}\n                height={50}\n                options={{\n                    plugins: {\n                        datalabels: {\n                            color: 'black',\n                            anchor: 'end',\n\n                            rotation: 0,\n                            labels: {\n                                title: {\n                                    font: {\n                                        weight: 'normal'\n                                    }\n                                },\n                                value: {\n                                    color: 'black'\n                                }\n                            }\n                        }\n                    }\n                }}\n            />\n        </div>\n    );\n}\n\nexport default ChartBar1"]},"metadata":{},"sourceType":"module"}