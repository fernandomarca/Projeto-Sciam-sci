{"ast":null,"code":"var _jsxFileName = \"/home/fernando/\\xC1rea de Trabalho/projetoDashImoveis/my-dashboard/src/components/Table/edittable.js\";\nimport React, { useEffect, useState } from 'react';\nimport MaterialTable from 'material-table';\nimport { Link } from '@material-ui/core';\nimport api from '../../services/api';\nexport default function MaterialTableDemo() {\n  const [state, setState] = React.useState({\n    columns: [{\n      title: 'Nome',\n      field: 'nome'\n    }, {\n      title: 'Preço',\n      field: 'preco'\n    }, {\n      title: 'Area Útil',\n      field: 'areaUtil',\n      type: 'numeric',\n      align: 'center'\n    }, {\n      field: 'unidade',\n      editable: 'never',\n      sorting: false,\n      readonly: true,\n      align: 'left'\n    }, {\n      title: 'Valor/m2',\n      field: 'valorm2',\n      editable: 'never'\n    }, {\n      title: 'Bairro',\n      field: 'bairro'\n    }, {\n      title: 'Cidade',\n      field: 'municipio'\n    }, {\n      title: 'Categoria',\n      field: 'categoria'\n    }, {\n      title: 'Tipo',\n      field: 'tipo'\n    }, {\n      title: 'Link',\n      field: 'link'\n    }],\n    data: []\n  });\n  const [dataApi, setDataApi] = useState([]);\n  useEffect(() => {\n    loadImoveis();\n  }, []);\n\n  async function loadImoveis() {\n    const response = await api.get('/imovel');\n    setState(prevState => {\n      const data = [...prevState.data];\n      data.push(response.data);\n      return { ...prevState,\n        data\n      };\n    });\n    setDataApi(response.data);\n  }\n\n  ;\n\n  async function handleDelete(oldData) {\n    try {\n      let id = oldData.id;\n      console.log(id);\n      console.log(oldData);\n      await api.delete(`/imovel/${id}`);\n    } catch (err) {\n      alert('erro ao deletar:' + err);\n    }\n  }\n\n  var imoveis = dataApi.map((ap, index) => {\n    let valorm2 = ap.preco / ap.areaUtil;\n    let linkHref = ap.link;\n    return {\n      id: `${ap._id}`,\n      nome: `${ap.nome}`,\n      preco: `${ap.preco.toLocaleString('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n      })}`,\n      areaUtil: `${ap.areaUtil}`,\n      unidade: 'm2',\n      valorm2: `${valorm2.toLocaleString('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n      })}`,\n      bairro: `${ap.bairro}`,\n      municipio: `${ap.municipio}`,\n      categoria: `${ap.categoria}`,\n      tipo: `${ap.tipo}`,\n      link: /*#__PURE__*/React.createElement(Link, {\n        target: \"_blank\",\n        rel: \"noopener\",\n        href: linkHref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }, \"Link do An\\xFAncio\")\n    };\n  });\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Rel\\xE1torio\",\n    columns: state.columns,\n    data: imoveis,\n    editable: {\n      onRowAdd: newData => new Promise((resolve, reject) => {\n        try {\n          resolve(api.post('/imovel', newData));\n        } catch (err) {\n          console.error('Erro' + err);\n          return reject('erro' + err);\n        }\n      }),\n      onRowUpdate: (newData, oldData) => console.log('update'),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/home/fernando/Área de Trabalho/projetoDashImoveis/my-dashboard/src/components/Table/edittable.js"],"names":["React","useEffect","useState","MaterialTable","Link","api","MaterialTableDemo","state","setState","columns","title","field","type","align","editable","sorting","readonly","data","dataApi","setDataApi","loadImoveis","response","get","prevState","push","handleDelete","oldData","id","console","log","delete","err","alert","imoveis","map","ap","index","valorm2","preco","areaUtil","linkHref","link","_id","nome","toLocaleString","style","currency","unidade","bairro","municipio","categoria","tipo","onRowAdd","newData","Promise","resolve","reject","post","error","onRowUpdate","onRowDelete","setTimeout","splice","indexOf"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,OAAOC,GAAP,MAAgB,oBAAhB;AAGA,eAAe,SAASC,iBAAT,GAA6B;AAExC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,KAAK,CAACE,QAAN,CAAe;AACrCO,IAAAA,OAAO,EAAE,CACL;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KADK,EAEL;AAAED,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,KAAK,EAAE;AAAzB,KAFK,EAGL;AAAED,MAAAA,KAAK,EAAE,WAAT;AAAsBC,MAAAA,KAAK,EAAE,UAA7B;AAAyCC,MAAAA,IAAI,EAAE,SAA/C;AAA0DC,MAAAA,KAAK,EAAE;AAAjE,KAHK,EAIL;AAAEF,MAAAA,KAAK,EAAE,SAAT;AAAoBG,MAAAA,QAAQ,EAAE,OAA9B;AAAuCC,MAAAA,OAAO,EAAE,KAAhD;AAAuDC,MAAAA,QAAQ,EAAE,IAAjE;AAAuEH,MAAAA,KAAK,EAAE;AAA9E,KAJK,EAKL;AAAEH,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,KAAK,EAAE,SAA5B;AAAuCG,MAAAA,QAAQ,EAAE;AAAjD,KALK,EAML;AAAEJ,MAAAA,KAAK,EAAE,QAAT;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KANK,EAOL;AAAED,MAAAA,KAAK,EAAE,QAAT;AAAmBC,MAAAA,KAAK,EAAE;AAA1B,KAPK,EAQL;AAAED,MAAAA,KAAK,EAAE,WAAT;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KARK,EASL;AAAED,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KATK,EAUL;AAAED,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KAVK,CAD4B;AAarCM,IAAAA,IAAI,EAAE;AAb+B,GAAf,CAA1B;AAgBA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZmB,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;;AAIA,iBAAeA,WAAf,GAA6B;AACzB,UAAMC,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,GAAJ,CAAQ,SAAR,CAAvB;AACAd,IAAAA,QAAQ,CAAEe,SAAD,IAAe;AACpB,YAAMN,IAAI,GAAG,CAAC,GAAGM,SAAS,CAACN,IAAd,CAAb;AACAA,MAAAA,IAAI,CAACO,IAAL,CAAUH,QAAQ,CAACJ,IAAnB;AACA,aAAO,EAAE,GAAGM,SAAL;AAAgBN,QAAAA;AAAhB,OAAP;AACH,KAJO,CAAR;AAKAE,IAAAA,UAAU,CAACE,QAAQ,CAACJ,IAAV,CAAV;AACH;;AAAA;;AAED,iBAAeQ,YAAf,CAA4BC,OAA5B,EAAqC;AACjC,QAAI;AACA,UAAIC,EAAE,GAAGD,OAAO,CAACC,EAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,YAAMrB,GAAG,CAACyB,MAAJ,CAAY,WAAUH,EAAG,EAAzB,CAAN;AAEH,KAND,CAME,OAAOI,GAAP,EAAY;AACVC,MAAAA,KAAK,CAAC,qBAAqBD,GAAtB,CAAL;AACH;AACJ;;AAGD,MAAIE,OAAO,GAAGf,OAAO,CAACgB,GAAR,CAAY,CAACC,EAAD,EAAKC,KAAL,KAAe;AACrC,QAAIC,OAAO,GAAGF,EAAE,CAACG,KAAH,GAAWH,EAAE,CAACI,QAA5B;AACA,QAAIC,QAAQ,GAAGL,EAAE,CAACM,IAAlB;AAEA,WAAO;AACHd,MAAAA,EAAE,EAAG,GAAEQ,EAAE,CAACO,GAAI,EADX;AAEHC,MAAAA,IAAI,EAAG,GAAER,EAAE,CAACQ,IAAK,EAFd;AAGHL,MAAAA,KAAK,EAAG,GAAEH,EAAE,CAACG,KAAH,CAASM,cAAT,CAAwB,OAAxB,EAAiC;AAAEC,QAAAA,KAAK,EAAE,UAAT;AAAqBC,QAAAA,QAAQ,EAAE;AAA/B,OAAjC,CAAyE,EAHhF;AAIHP,MAAAA,QAAQ,EAAG,GAAEJ,EAAE,CAACI,QAAS,EAJtB;AAKHQ,MAAAA,OAAO,EAAE,IALN;AAMHV,MAAAA,OAAO,EAAG,GAAEA,OAAO,CAACO,cAAR,CAAuB,OAAvB,EAAgC;AAAEC,QAAAA,KAAK,EAAE,UAAT;AAAqBC,QAAAA,QAAQ,EAAE;AAA/B,OAAhC,CAAwE,EANjF;AAOHE,MAAAA,MAAM,EAAG,GAAEb,EAAE,CAACa,MAAO,EAPlB;AAQHC,MAAAA,SAAS,EAAG,GAAEd,EAAE,CAACc,SAAU,EARxB;AASHC,MAAAA,SAAS,EAAG,GAAEf,EAAE,CAACe,SAAU,EATxB;AAUHC,MAAAA,IAAI,EAAG,GAAEhB,EAAE,CAACgB,IAAK,EAVd;AAWHV,MAAAA,IAAI,eAAE,oBAAC,IAAD;AAAM,QAAA,MAAM,EAAC,QAAb;AAAsB,QAAA,GAAG,EAAC,UAA1B;AAAqC,QAAA,IAAI,EAAED,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXH,KAAP;AAaH,GAjBa,CAAd;AAmBA,sBACI,oBAAC,aAAD;AACI,IAAA,KAAK,EAAC,cADV;AAEI,IAAA,OAAO,EAAEjC,KAAK,CAACE,OAFnB;AAGI,IAAA,IAAI,EAAEwB,OAHV;AAII,IAAA,QAAQ,EAAE;AACNmB,MAAAA,QAAQ,EAAGC,OAAD,IACN,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7B,YAAI;AACAD,UAAAA,OAAO,CAAClD,GAAG,CAACoD,IAAJ,CAAS,SAAT,EAAoBJ,OAApB,CAAD,CAAP;AACH,SAFD,CAEE,OAAOtB,GAAP,EAAY;AACVH,UAAAA,OAAO,CAAC8B,KAAR,CAAc,SAAS3B,GAAvB;AACA,iBAAOyB,MAAM,CAAC,SAASzB,GAAV,CAAb;AACH;AACJ,OAPD,CAFE;AAUN4B,MAAAA,WAAW,EAAE,CAACN,OAAD,EAAU3B,OAAV,KACTE,OAAO,CAACC,GAAR,CAAY,QAAZ,CAXE;AAYN+B,MAAAA,WAAW,EAAGlC,OAAD,IACT,IAAI4B,OAAJ,CAAaC,OAAD,IAAa;AACrBM,QAAAA,UAAU,CAAC,MAAM;AACbN,UAAAA,OAAO;AACP/C,UAAAA,QAAQ,CAAEe,SAAD,IAAe;AACpB,kBAAMN,IAAI,GAAG,CAAC,GAAGM,SAAS,CAACN,IAAd,CAAb;AACAA,YAAAA,IAAI,CAAC6C,MAAL,CAAY7C,IAAI,CAAC8C,OAAL,CAAarC,OAAb,CAAZ,EAAmC,CAAnC;AACA,mBAAO,EAAE,GAAGH,SAAL;AAAgBN,cAAAA;AAAhB,aAAP;AACH,WAJO,CAAR;AAKH,SAPS,EAOP,GAPO,CAAV;AAQH,OATD;AAbE,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AA+BH","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport MaterialTable from 'material-table';\nimport { Link } from '@material-ui/core';\n\nimport api from '../../services/api';\n\n\nexport default function MaterialTableDemo() {\n\n    const [state, setState] = React.useState({\n        columns: [\n            { title: 'Nome', field: 'nome' },\n            { title: 'Preço', field: 'preco' },\n            { title: 'Area Útil', field: 'areaUtil', type: 'numeric', align: 'center' },\n            { field: 'unidade', editable: 'never', sorting: false, readonly: true, align: 'left' },\n            { title: 'Valor/m2', field: 'valorm2', editable: 'never' },\n            { title: 'Bairro', field: 'bairro' },\n            { title: 'Cidade', field: 'municipio' },\n            { title: 'Categoria', field: 'categoria' },\n            { title: 'Tipo', field: 'tipo' },\n            { title: 'Link', field: 'link' },\n        ],\n        data: []\n    });\n\n    const [dataApi, setDataApi] = useState([]);\n\n    useEffect(() => {\n        loadImoveis();\n    }, [])\n\n    async function loadImoveis() {\n        const response = await api.get('/imovel');\n        setState((prevState) => {\n            const data = [...prevState.data];\n            data.push(response.data);\n            return { ...prevState, data };\n        });\n        setDataApi(response.data)\n    };\n\n    async function handleDelete(oldData) {\n        try {\n            let id = oldData.id;\n            console.log(id)\n            console.log(oldData)\n            await api.delete(`/imovel/${id}`)\n\n        } catch (err) {\n            alert('erro ao deletar:' + err)\n        }\n    }\n\n\n    var imoveis = dataApi.map((ap, index) => {\n        let valorm2 = ap.preco / ap.areaUtil\n        let linkHref = ap.link;\n\n        return {\n            id: `${ap._id}`,\n            nome: `${ap.nome}`,\n            preco: `${ap.preco.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })}`,\n            areaUtil: `${ap.areaUtil}`,\n            unidade: 'm2',\n            valorm2: `${valorm2.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })}`,\n            bairro: `${ap.bairro}`,\n            municipio: `${ap.municipio}`,\n            categoria: `${ap.categoria}`,\n            tipo: `${ap.tipo}`,\n            link: <Link target='_blank' rel='noopener' href={linkHref} >Link do Anúncio</Link>\n        }\n    })\n\n    return (\n        <MaterialTable\n            title=\"Relátorio\"\n            columns={state.columns}\n            data={imoveis}\n            editable={{\n                onRowAdd: (newData) =>\n                    new Promise((resolve, reject) => {\n                        try {\n                            resolve(api.post('/imovel', newData))\n                        } catch (err) {\n                            console.error('Erro' + err);\n                            return reject('erro' + err);\n                        }\n                    }),\n                onRowUpdate: (newData, oldData) =>\n                    console.log('update'),\n                onRowDelete: (oldData) =>\n                    new Promise((resolve) => {\n                        setTimeout(() => {\n                            resolve();\n                            setState((prevState) => {\n                                const data = [...prevState.data];\n                                data.splice(data.indexOf(oldData), 1);\n                                return { ...prevState, data };\n                            });\n                        }, 600);\n                    }),\n            }}\n        />\n    );\n}\n"]},"metadata":{},"sourceType":"module"}