{"ast":null,"code":"var _jsxFileName = \"/home/fernando/\\xC1rea de Trabalho/projetoDashImoveis/my-dashboard/src/components/Tasks/Tasks.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\"; // @material-ui/icons\n\nimport Edit from \"@material-ui/icons/Edit\";\nimport Close from \"@material-ui/icons/Close\";\nimport Check from \"@material-ui/icons/Check\"; // core components\n\nimport styles from '../../assets/jss/material-dashboard-react/components/tasksStyle';\nconst useStyles = makeStyles(styles);\nexport default function Tasks(props) {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([...props.checkedIndexes]);\n\n  const handleToggle = value => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const {\n    tasksIndexes,\n    tasks,\n    rtlActive\n  } = props;\n  const tableCellClasses = classnames(classes.tableCell, {\n    [classes.tableCellRTL]: rtlActive\n  });\n  return /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, tasksIndexes.map(value => /*#__PURE__*/React.createElement(TableRow, {\n    key: value,\n    className: classes.tableRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: tableCellClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: checked.indexOf(value) !== -1,\n    tabIndex: -1,\n    onClick: () => handleToggle(value),\n    checkedIcon: /*#__PURE__*/React.createElement(Check, {\n      className: classes.checkedIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 30\n      }\n    }),\n    icon: /*#__PURE__*/React.createElement(Check, {\n      className: classes.uncheckedIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 23\n      }\n    }),\n    classes: {\n      checked: classes.checked,\n      root: classes.root\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    className: tableCellClasses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, tasks[value]), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.tableActions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    id: \"tooltip-top\",\n    title: \"Edit Task\",\n    placement: \"top\",\n    classes: {\n      tooltip: classes.tooltip\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"Edit\",\n    className: classes.tableActionButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Edit, {\n    className: classes.tableActionButtonIcon + \" \" + classes.edit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Tooltip, {\n    id: \"tooltip-top-start\",\n    title: \"Remove\",\n    placement: \"top\",\n    classes: {\n      tooltip: classes.tooltip\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"Close\",\n    className: classes.tableActionButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Close, {\n    className: classes.tableActionButtonIcon + \" \" + classes.close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }))))))));\n}\nTasks.propTypes = {\n  tasksIndexes: PropTypes.arrayOf(PropTypes.number),\n  tasks: PropTypes.arrayOf(PropTypes.node),\n  rtlActive: PropTypes.bool,\n  checkedIndexes: PropTypes.array\n};","map":{"version":3,"sources":["/home/fernando/√Årea de Trabalho/projetoDashImoveis/my-dashboard/src/components/Tasks/Tasks.js"],"names":["React","PropTypes","classnames","makeStyles","Checkbox","Tooltip","IconButton","Table","TableRow","TableBody","TableCell","Edit","Close","Check","styles","useStyles","Tasks","props","classes","checked","setChecked","useState","checkedIndexes","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","tasksIndexes","tasks","rtlActive","tableCellClasses","tableCell","tableCellRTL","table","map","tableRow","checkedIcon","uncheckedIcon","root","tableActions","tooltip","tableActionButton","tableActionButtonIcon","edit","close","propTypes","arrayOf","number","node","bool","array"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\n// @material-ui/icons\nimport Edit from \"@material-ui/icons/Edit\";\nimport Close from \"@material-ui/icons/Close\";\nimport Check from \"@material-ui/icons/Check\";\n// core components\n\nimport styles from '../../assets/jss/material-dashboard-react/components/tasksStyle';\n\nconst useStyles = makeStyles(styles);\n\nexport default function Tasks(props) {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([...props.checkedIndexes]);\n  const handleToggle = value => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n    setChecked(newChecked);\n  };\n  const { tasksIndexes, tasks, rtlActive } = props;\n  const tableCellClasses = classnames(classes.tableCell, {\n    [classes.tableCellRTL]: rtlActive\n  });\n  return (\n    <Table className={classes.table}>\n      <TableBody>\n        {tasksIndexes.map(value => (\n          <TableRow key={value} className={classes.tableRow}>\n            <TableCell className={tableCellClasses}>\n              <Checkbox\n                checked={checked.indexOf(value) !== -1}\n                tabIndex={-1}\n                onClick={() => handleToggle(value)}\n                checkedIcon={<Check className={classes.checkedIcon} />}\n                icon={<Check className={classes.uncheckedIcon} />}\n                classes={{\n                  checked: classes.checked,\n                  root: classes.root\n                }}\n              />\n            </TableCell>\n            <TableCell className={tableCellClasses}>{tasks[value]}</TableCell>\n            <TableCell className={classes.tableActions}>\n              <Tooltip\n                id=\"tooltip-top\"\n                title=\"Edit Task\"\n                placement=\"top\"\n                classes={{ tooltip: classes.tooltip }}\n              >\n                <IconButton\n                  aria-label=\"Edit\"\n                  className={classes.tableActionButton}\n                >\n                  <Edit\n                    className={\n                      classes.tableActionButtonIcon + \" \" + classes.edit\n                    }\n                  />\n                </IconButton>\n              </Tooltip>\n              <Tooltip\n                id=\"tooltip-top-start\"\n                title=\"Remove\"\n                placement=\"top\"\n                classes={{ tooltip: classes.tooltip }}\n              >\n                <IconButton\n                  aria-label=\"Close\"\n                  className={classes.tableActionButton}\n                >\n                  <Close\n                    className={\n                      classes.tableActionButtonIcon + \" \" + classes.close\n                    }\n                  />\n                </IconButton>\n              </Tooltip>\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n\nTasks.propTypes = {\n  tasksIndexes: PropTypes.arrayOf(PropTypes.number),\n  tasks: PropTypes.arrayOf(PropTypes.node),\n  rtlActive: PropTypes.bool,\n  checkedIndexes: PropTypes.array\n};\n"]},"metadata":{},"sourceType":"module"}