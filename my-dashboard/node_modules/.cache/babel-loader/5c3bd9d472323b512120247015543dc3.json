{"ast":null,"code":"const resultSanitized = require('../resultSanitized/resultSanitized');\n\nconsole.log(resul); //reduce para extrair somente os bairros não repetidos\n\nconst bairrosReduce = resultSanitized.reduce((acc, ap) => {\n  if (!acc.includes(ap.bairro)) {\n    acc.push(ap.bairro);\n  }\n\n  return acc;\n}, []); //console.log(bairrosReduce)\n//Filtra por bairro escolhido array do bairrosReduce [\"Centro\",\"Cancelli\"]\n\nfor (const key in bairrosReduce) {\n  const filterBairro = resultSanitized.filter(ap => ap.bairro.includes(bairrosReduce[key]));\n  console.log(`A quantidade de Apartamentos no bairro:${bairrosReduce[key]} é:${filterBairro.length}`);\n} //gráfico distribuição de apartamentos por bairro\n\n\nconst barData = {\n  labels: ['Cancelli', 'Centro', 'Coqueiral', \"Country\", \"Guarujá\", \"Neva\", \"Pioneiros Catar.\"],\n  datasets: [{\n    label: 'Imóveis por Bairro',\n    backgroundColor: 'rgb(34, 0, 255,0.2)',\n    borderColor: 'rgb(34, 0, 255)',\n    borderWidth: 1,\n    hoverBackgroundColor: 'rgb(34, 0, 255,0.4)',\n    hoverBorderColor: 'rgb(34, 0, 255)',\n    data: [3, 26, 4, 6, 1, 3, 1]\n  }]\n};\nconst barData2 = {\n  labels: ['Cancelli', 'Centro', 'Coqueiral', \"Country\", \"Guarujá\", \"Neva\", \"Pioneiros Catar.\"],\n  datasets: [{\n    label: 'Imóveis por Bairro',\n    backgroundColor: 'rgb(34, 0, 255,0.2)',\n    borderColor: 'rgb(34, 0, 255)',\n    borderWidth: 1,\n    hoverBackgroundColor: 'rgb(34, 0, 255,0.4)',\n    hoverBorderColor: 'rgb(34, 0, 255)',\n    data: [3, 26, 4, 6, 1, 3, 1]\n  }]\n};\nconst barData3 = {\n  labels: ['Cancelli', 'Centro', 'Coqueiral', \"Country\", \"Guarujá\", \"Neva\", \"Pioneiros Catar.\"],\n  datasets: [{\n    label: 'Imóveis por Bairro',\n    backgroundColor: 'rgb(34, 0, 255,0.2)',\n    borderColor: 'rgb(34, 0, 255)',\n    borderWidth: 1,\n    hoverBackgroundColor: 'rgb(34, 0, 255,0.4)',\n    hoverBorderColor: 'rgb(34, 0, 255)',\n    data: [3, 26, 4, 6, 1, 3, 1]\n  }]\n};\nmodule.exports = {\n  barData,\n  barData2,\n  barData3\n};","map":{"version":3,"sources":["/home/fernando/Área de Trabalho/projetoDashImoveis/my-dashboard/src/variables/charts/data.js"],"names":["resultSanitized","require","console","log","resul","bairrosReduce","reduce","acc","ap","includes","bairro","push","key","filterBairro","filter","length","barData","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","barData2","barData3","module","exports"],"mappings":"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","sourcesContent":["const resultSanitized = require('../resultSanitized/resultSanitized')\n\nconsole.log(resul)\n//reduce para extrair somente os bairros não repetidos\nconst bairrosReduce = resultSanitized.reduce((acc, ap) => {\n    if (!acc.includes(ap.bairro)) {\n        acc.push(ap.bairro);\n    }\n    return acc;\n}, [])\n//console.log(bairrosReduce)\n\n//Filtra por bairro escolhido array do bairrosReduce [\"Centro\",\"Cancelli\"]\nfor (const key in bairrosReduce) {\n    const filterBairro = resultSanitized.filter((ap) => ap.bairro.includes(bairrosReduce[key]))\n    console.log(`A quantidade de Apartamentos no bairro:${bairrosReduce[key]} é:${filterBairro.length}`)\n}\n\n//gráfico distribuição de apartamentos por bairro\nconst barData = {\n    labels: ['Cancelli', 'Centro', 'Coqueiral', \"Country\", \"Guarujá\", \"Neva\", \"Pioneiros Catar.\"],\n    datasets: [\n        {\n            label: 'Imóveis por Bairro',\n            backgroundColor: 'rgb(34, 0, 255,0.2)',\n            borderColor: 'rgb(34, 0, 255)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgb(34, 0, 255,0.4)',\n            hoverBorderColor: 'rgb(34, 0, 255)',\n            data: [3, 26, 4, 6, 1, 3, 1]\n        }\n    ]\n};\n\nconst barData2 = {\n    labels: ['Cancelli', 'Centro', 'Coqueiral', \"Country\", \"Guarujá\", \"Neva\", \"Pioneiros Catar.\"],\n    datasets: [\n        {\n            label: 'Imóveis por Bairro',\n            backgroundColor: 'rgb(34, 0, 255,0.2)',\n            borderColor: 'rgb(34, 0, 255)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgb(34, 0, 255,0.4)',\n            hoverBorderColor: 'rgb(34, 0, 255)',\n            data: [3, 26, 4, 6, 1, 3, 1]\n        }\n    ]\n};\n\nconst barData3 = {\n    labels: ['Cancelli', 'Centro', 'Coqueiral', \"Country\", \"Guarujá\", \"Neva\", \"Pioneiros Catar.\"],\n    datasets: [\n        {\n            label: 'Imóveis por Bairro',\n            backgroundColor: 'rgb(34, 0, 255,0.2)',\n            borderColor: 'rgb(34, 0, 255)',\n            borderWidth: 1,\n            hoverBackgroundColor: 'rgb(34, 0, 255,0.4)',\n            hoverBorderColor: 'rgb(34, 0, 255)',\n            data: [3, 26, 4, 6, 1, 3, 1]\n        }\n    ]\n};\n\nmodule.exports = { barData, barData2, barData3 };"]},"metadata":{},"sourceType":"module"}