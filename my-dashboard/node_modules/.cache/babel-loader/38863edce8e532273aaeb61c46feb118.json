{"ast":null,"code":"var _jsxFileName = \"/home/fernando/\\xC1rea de Trabalho/DashBoardBootstrap/react/git/material-dashboard-react/my-dashboard/src/layouts/Admin.js\";\nimport React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\"; // creates a beautiful scrollbar\n\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport Navbar from \"../components/Navbars/Navbar\"; //RTL isolado\n//import Footer from \"../components/Footer/Footer\";\n//import Sidebar from \"../components/Sidebar/Sidebar\";\n//import FixedPlugin from \"../components/FixedPlugin/FixedPlugin\";\n\nimport routes from \"../routes\";\nimport styles from \"../assets/jss/material-dashboard-react/layouts/adminStyle\";\nimport bgImage from \"../assets/img/sidebar-2.jpg\";\nimport logo from \"../assets/img/reactlogo.png\";\nlet ps;\nconst switchRoutes = /*#__PURE__*/React.createElement(Switch, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }\n}, routes.map((prop, key) => {\n  if (prop.layout === \"/admin\") {\n    return /*#__PURE__*/React.createElement(Route, {\n      path: prop.layout + prop.path,\n      component: prop.component,\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    });\n  }\n\n  return null;\n}), /*#__PURE__*/React.createElement(Redirect, {\n  from: \"/admin\",\n  to: \"/admin/dashboard\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }\n}));\nconst useStyles = makeStyles(styles);\nexport default function Admin({ ...rest\n}) {\n  // styles\n  const classes = useStyles(); // ref to help us initialize PerfectScrollbar on windows devices\n\n  const mainPanel = React.createRef(); // states and functions\n\n  const [image, setImage] = React.useState(bgImage);\n  const [color, setColor] = React.useState(\"blue\");\n  const [fixedClasses, setFixedClasses] = React.useState(\"dropdown show\");\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleImageClick = image => {\n    setImage(image);\n  };\n\n  const handleColorClick = color => {\n    setColor(color);\n  };\n\n  const handleFixedClick = () => {\n    if (fixedClasses === \"dropdown\") {\n      setFixedClasses(\"dropdown show\");\n    } else {\n      setFixedClasses(\"dropdown\");\n    }\n  };\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const getRoute = () => {\n    return window.location.pathname !== \"/admin/maps\";\n  };\n\n  const resizeFunction = () => {\n    if (window.innerWidth >= 960) {\n      setMobileOpen(false);\n    }\n  }; // initialize and destroy the PerfectScrollbar plugin\n\n\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(mainPanel.current, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n      document.body.style.overflow = \"hidden\";\n    }\n\n    window.addEventListener(\"resize\", resizeFunction); // Specify how to clean up after this effect:\n\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n\n      window.removeEventListener(\"resize\", resizeFunction);\n    };\n  }, [mainPanel]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, Object.assign({\n    routes: routes,\n    handleDrawerToggle: handleDrawerToggle\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["/home/fernando/√Årea de Trabalho/DashBoardBootstrap/react/git/material-dashboard-react/my-dashboard/src/layouts/Admin.js"],"names":["React","Switch","Route","Redirect","PerfectScrollbar","makeStyles","Navbar","routes","styles","bgImage","logo","ps","switchRoutes","map","prop","key","layout","path","component","useStyles","Admin","rest","classes","mainPanel","createRef","image","setImage","useState","color","setColor","fixedClasses","setFixedClasses","mobileOpen","setMobileOpen","handleImageClick","handleColorClick","handleFixedClick","handleDrawerToggle","getRoute","window","location","pathname","resizeFunction","innerWidth","useEffect","navigator","platform","indexOf","current","suppressScrollX","suppressScrollY","document","body","style","overflow","addEventListener","cleanup","destroy","removeEventListener"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n// creates a beautiful scrollbar\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// core components\nimport Navbar from \"../components/Navbars/Navbar\"; //RTL isolado\n//import Footer from \"../components/Footer/Footer\";\n//import Sidebar from \"../components/Sidebar/Sidebar\";\n//import FixedPlugin from \"../components/FixedPlugin/FixedPlugin\";\n\nimport routes from \"../routes\";\n\n\nimport styles from \"../assets/jss/material-dashboard-react/layouts/adminStyle\";\n\nimport bgImage from \"../assets/img/sidebar-2.jpg\";\nimport logo from \"../assets/img/reactlogo.png\";\n\nlet ps;\n\n\n\nconst switchRoutes = (\n  <Switch>\n    {routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      }\n      return null;\n    })}\n    <Redirect from=\"/admin\" to=\"/admin/dashboard\" />\n  </Switch>\n);\n\n\n\nconst useStyles = makeStyles(styles);\n\nexport default function Admin({ ...rest }) {\n  // styles\n  const classes = useStyles();\n  // ref to help us initialize PerfectScrollbar on windows devices\n  const mainPanel = React.createRef();\n  // states and functions\n  const [image, setImage] = React.useState(bgImage);\n  const [color, setColor] = React.useState(\"blue\");\n  const [fixedClasses, setFixedClasses] = React.useState(\"dropdown show\");\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const handleImageClick = image => {\n    setImage(image);\n  };\n  const handleColorClick = color => {\n    setColor(color);\n  };\n  const handleFixedClick = () => {\n    if (fixedClasses === \"dropdown\") {\n      setFixedClasses(\"dropdown show\");\n    } else {\n      setFixedClasses(\"dropdown\");\n    }\n  };\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  const getRoute = () => {\n    return window.location.pathname !== \"/admin/maps\";\n  };\n  const resizeFunction = () => {\n    if (window.innerWidth >= 960) {\n      setMobileOpen(false);\n    }\n  };\n  // initialize and destroy the PerfectScrollbar plugin\n  React.useEffect(() => {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(mainPanel.current, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n      document.body.style.overflow = \"hidden\";\n    }\n    window.addEventListener(\"resize\", resizeFunction);\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n      window.removeEventListener(\"resize\", resizeFunction);\n    };\n  }, [mainPanel]);\n  return (\n    <div>\n      <Navbar\n        routes={routes}\n        handleDrawerToggle={handleDrawerToggle}\n        {...rest}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}