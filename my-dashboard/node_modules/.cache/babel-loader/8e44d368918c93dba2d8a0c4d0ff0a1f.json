{"ast":null,"code":"//const dataApi = require('../resultSanitized/resultSanitized');\nimport React, { useState } from 'react';\nimport api from '../../services/api';\n\n(async function loadImoveis() {\n  const [dataApi, setDataApi] = useState([]);\n  const response = await api.get('/imovel');\n  setDataApi.push(response.data);\n  console.log(dataApi); //reduce para extrair somente os bairros não repetidos\n\n  const bairrosReduce = dataApi.reduce((acc, ap) => {\n    if (!acc.includes(ap.bairro)) {\n      acc.push(ap.bairro);\n    }\n\n    return acc;\n  }, []).sort(); //console.log(bairrosReduce)\n  //Filtra por bairro escolhido array do bairrosReduce [\"Centro\",\"Cancelli\"]\n\n  const quantAptosBairro = [];\n\n  for (const key in bairrosReduce) {\n    const filterBairro = dataApi.filter(ap => ap.bairro.includes(bairrosReduce[key])); //console.log(`A quantidade de Apartamentos no bairro:${bairrosReduce[key]} é:${filterBairro.length}`)\n\n    quantAptosBairro.push(filterBairro.length);\n  } //gráfico distribuição de apartamentos por bairro\n\n\n  const barData = {\n    labels: [...bairrosReduce],\n    datasets: [{\n      label: 'Unidades por Bairro',\n      backgroundColor: 'rgb(34, 0, 255,0.2)',\n      borderColor: 'rgb(34, 0, 255)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgb(34, 0, 255,0.4)',\n      hoverBorderColor: 'rgb(34, 0, 255)',\n      data: [...quantAptosBairro]\n    }]\n  }; //gráfico tamanho médio de área por bairro\n  //somar as áreas por bairro e dividi pela quantidade de apartamentos\n  //Soma das áreas por bairro\n\n  const mediaAreaBairro = [];\n  bairrosReduce.map((bairro, index) => {\n    const apto = dataApi.filter(ap => ap.bairro.includes(bairrosReduce[index]));\n    let somaArea = apto.reduce((acc, apto, index) => {\n      acc = acc + apto.areaUtil; //console.log(index)\n\n      return acc;\n    }, 0);\n    return mediaAreaBairro.push((somaArea / apto.length).toFixed(2));\n  }); //console.log(mediaAreaBairro)\n\n  const barData2 = {\n    labels: [...bairrosReduce],\n    datasets: [{\n      label: 'Tamanho médio por Bairro',\n      backgroundColor: 'rgb(7, 155, 15,0.2)',\n      borderColor: 'rgb(7, 155, 15)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgb(7, 155, 15,0.4)',\n      hoverBorderColor: 'rgb(7, 155, 15)',\n      data: [...mediaAreaBairro]\n    }]\n  }; //gráfico valor médio do m2 por bairro\n  //valor médio do m2 por bairro: soma(preco/area)/qtdaAptos\n\n  const valorM2Bairro = [];\n  bairrosReduce.map((bairro, index) => {\n    const apto = dataApi.filter(ap => ap.bairro.includes(bairrosReduce[index]));\n    let custoM2 = apto.reduce((acc, apto, index) => {\n      acc = acc + apto.preco / apto.areaUtil; //console.log(index)\n\n      return acc;\n    }, 0);\n    return valorM2Bairro.push((custoM2 / apto.length).toFixed(2));\n  }); //console.log(valorM2Bairro)\n\n  const barData3 = {\n    labels: [...bairrosReduce],\n    datasets: [{\n      label: 'Valor do m² por Bairro',\n      backgroundColor: 'rgb(196, 3, 3,0.2)',\n      borderColor: 'rgb(196, 3, 3)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgb(196, 3, 3,0.4)',\n      hoverBorderColor: 'rgb(196, 3, 3)',\n      data: [...valorM2Bairro]\n    }]\n  };\n})();","map":{"version":3,"sources":["/home/fernando/Área de Trabalho/projetoDashImoveis/my-dashboard/src/variables/charts/data.js"],"names":["React","useState","api","loadImoveis","dataApi","setDataApi","response","get","push","data","console","log","bairrosReduce","reduce","acc","ap","includes","bairro","sort","quantAptosBairro","key","filterBairro","filter","length","barData","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","mediaAreaBairro","map","index","apto","somaArea","areaUtil","toFixed","barData2","valorM2Bairro","custoM2","preco","barData3"],"mappings":"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","sourcesContent":["//const dataApi = require('../resultSanitized/resultSanitized');\nimport React, { useState } from 'react'\nimport api from '../../services/api';\n\n(async function loadImoveis() {\n    const [dataApi, setDataApi] = useState([]);\n    const response = await api.get('/imovel');\n    setDataApi.push(response.data)\n    console.log(dataApi)\n\n    //reduce para extrair somente os bairros não repetidos\n    const bairrosReduce = dataApi.reduce((acc, ap) => {\n        if (!acc.includes(ap.bairro)) {\n            acc.push(ap.bairro);\n        }\n        return acc;\n    }, []).sort()\n    //console.log(bairrosReduce)\n\n    //Filtra por bairro escolhido array do bairrosReduce [\"Centro\",\"Cancelli\"]\n    const quantAptosBairro = []\n    for (const key in bairrosReduce) {\n        const filterBairro = dataApi.filter((ap) => ap.bairro.includes(bairrosReduce[key]))\n        //console.log(`A quantidade de Apartamentos no bairro:${bairrosReduce[key]} é:${filterBairro.length}`)\n        quantAptosBairro.push(filterBairro.length)\n    }\n\n    //gráfico distribuição de apartamentos por bairro\n    const barData = {\n        labels: [...bairrosReduce],\n        datasets: [\n            {\n                label: 'Unidades por Bairro',\n                backgroundColor: 'rgb(34, 0, 255,0.2)',\n                borderColor: 'rgb(34, 0, 255)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgb(34, 0, 255,0.4)',\n                hoverBorderColor: 'rgb(34, 0, 255)',\n                data: [...quantAptosBairro]\n            }\n        ]\n    };\n\n\n    //gráfico tamanho médio de área por bairro\n    //somar as áreas por bairro e dividi pela quantidade de apartamentos\n    //Soma das áreas por bairro\n    const mediaAreaBairro = []\n\n    bairrosReduce.map((bairro, index) => {\n        const apto = dataApi.filter((ap) => ap.bairro.includes(bairrosReduce[index]))\n        let somaArea = apto.reduce((acc, apto, index) => {\n            acc = (acc + apto.areaUtil);\n            //console.log(index)\n            return acc\n        }, 0)\n        return mediaAreaBairro.push((somaArea / apto.length).toFixed(2))\n    })\n    //console.log(mediaAreaBairro)\n\n    const barData2 = {\n        labels: [...bairrosReduce],\n        datasets: [\n            {\n                label: 'Tamanho médio por Bairro',\n                backgroundColor: 'rgb(7, 155, 15,0.2)',\n                borderColor: 'rgb(7, 155, 15)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgb(7, 155, 15,0.4)',\n                hoverBorderColor: 'rgb(7, 155, 15)',\n                data: [...mediaAreaBairro]\n            }\n        ]\n    };\n\n    //gráfico valor médio do m2 por bairro\n    //valor médio do m2 por bairro: soma(preco/area)/qtdaAptos\n    const valorM2Bairro = []\n    bairrosReduce.map((bairro, index) => {\n        const apto = dataApi.filter((ap) => ap.bairro.includes(bairrosReduce[index]))\n        let custoM2 = apto.reduce((acc, apto, index) => {\n            acc = acc + (apto.preco / apto.areaUtil);\n            //console.log(index)\n            return acc\n        }, 0)\n        return valorM2Bairro.push((custoM2 / apto.length).toFixed(2))\n    })\n    //console.log(valorM2Bairro)\n\n    const barData3 = {\n        labels: [...bairrosReduce],\n        datasets: [\n            {\n                label: 'Valor do m² por Bairro',\n                backgroundColor: 'rgb(196, 3, 3,0.2)',\n                borderColor: 'rgb(196, 3, 3)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgb(196, 3, 3,0.4)',\n                hoverBorderColor: 'rgb(196, 3, 3)',\n                data: [...valorM2Bairro]\n            }\n        ]\n    };\n\n}());"]},"metadata":{},"sourceType":"module"}