{"ast":null,"code":"var _jsxFileName = \"/home/fernando/\\xC1rea de Trabalho/projetoDashImoveis/my-dashboard/src/components/Table/edittable.js\";\nimport React, { useEffect, useState } from 'react';\nimport MaterialTable from 'material-table';\nimport { Link } from '@material-ui/core';\nimport api from '../../services/api';\nexport default function MaterialTableDemo() {\n  const [state, setState] = React.useState({\n    columns: [{\n      title: 'Nome',\n      field: 'nome'\n    }, {\n      title: 'Preço',\n      field: 'preco'\n    }, {\n      title: 'Area Útil',\n      field: 'areaUtil',\n      type: 'numeric',\n      unidade: {\n        1: 'm2'\n      }\n    }, {\n      title: 'Valor/m2',\n      field: 'valorm2',\n      editable: 'never'\n    }, {\n      title: 'Bairro',\n      field: 'bairro'\n    }, {\n      title: 'Cidade',\n      field: 'municipio'\n    }, {\n      title: 'Categoria',\n      field: 'categoria'\n    }, {\n      title: 'Tipo',\n      field: 'tipo'\n    }, {\n      title: 'Link',\n      field: 'link'\n    }]\n  });\n  const [dataApi, setDataApi] = useState([]);\n  useEffect(() => {\n    (async function loadImoveis() {\n      const response = await api.get('/imovel');\n      setDataApi(response.data);\n    })();\n  }, []);\n  var imoveis = dataApi.map((ap, index) => {\n    let valorm2 = ap.preco / ap.areaUtil;\n    let linkHref = ap.link;\n    return {\n      nome: `${ap.nome}`,\n      preco: `${ap.preco.toLocaleString('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n      })}`,\n      areaUtil: `${ap.areaUtil}${unidade}`,\n      valorm2: `${valorm2.toLocaleString('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n      })}`,\n      bairro: `${ap.bairro}`,\n      municipio: `${ap.municipio}`,\n      categoria: `${ap.categoria}`,\n      tipo: `${ap.tipo}`,\n      link: /*#__PURE__*/React.createElement(Link, {\n        target: \"_blank\",\n        rel: \"noopener\",\n        href: linkHref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }\n      }, \"Link do An\\xFAncio\")\n    };\n  });\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    title: \"Editable Example\",\n    columns: state.columns,\n    data: imoveis,\n    editable: {\n      onRowAdd: newData => new Promise((resolve, reject) => {\n        try {\n          resolve(api.post('/imovel', newData));\n        } catch (err) {\n          console.error('Erro' + err);\n          return reject('erro' + err);\n        }\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/home/fernando/Área de Trabalho/projetoDashImoveis/my-dashboard/src/components/Table/edittable.js"],"names":["React","useEffect","useState","MaterialTable","Link","api","MaterialTableDemo","state","setState","columns","title","field","type","unidade","editable","dataApi","setDataApi","loadImoveis","response","get","data","imoveis","map","ap","index","valorm2","preco","areaUtil","linkHref","link","nome","toLocaleString","style","currency","bairro","municipio","categoria","tipo","onRowAdd","newData","Promise","resolve","reject","post","err","console","error","onRowUpdate","oldData","setTimeout","prevState","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport MaterialTable from 'material-table';\nimport { Link } from '@material-ui/core';\n\nimport api from '../../services/api';\n\n\nexport default function MaterialTableDemo() {\n\n    const [state, setState] = React.useState({\n        columns: [\n            { title: 'Nome', field: 'nome' },\n            { title: 'Preço', field: 'preco' },\n            {\n                title: 'Area Útil', field: 'areaUtil', type: 'numeric',\n                unidade: { 1: 'm2' }\n            },\n            { title: 'Valor/m2', field: 'valorm2', editable: 'never' },\n            { title: 'Bairro', field: 'bairro' },\n            { title: 'Cidade', field: 'municipio' },\n            { title: 'Categoria', field: 'categoria' },\n            { title: 'Tipo', field: 'tipo' },\n            { title: 'Link', field: 'link' },\n        ]\n    });\n\n    const [dataApi, setDataApi] = useState([]);\n\n    useEffect(() => {\n        (async function loadImoveis() {\n            const response = await api.get('/imovel');\n            setDataApi(response.data)\n        }());\n    }, [])\n\n    var imoveis = dataApi.map((ap, index) => {\n        let valorm2 = ap.preco / ap.areaUtil\n        let linkHref = ap.link;\n\n        return {\n            nome: `${ap.nome}`,\n            preco: `${ap.preco.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })}`,\n            areaUtil: `${ap.areaUtil}${unidade}`,\n            valorm2: `${valorm2.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' })}`,\n            bairro: `${ap.bairro}`,\n            municipio: `${ap.municipio}`,\n            categoria: `${ap.categoria}`,\n            tipo: `${ap.tipo}`,\n            link: <Link target='_blank' rel='noopener' href={linkHref} >Link do Anúncio</Link>\n        }\n    })\n    return (\n        <MaterialTable\n            title=\"Editable Example\"\n            columns={state.columns}\n            data={imoveis}\n            editable={{\n                onRowAdd: (newData) =>\n                    new Promise((resolve, reject) => {\n                        try {\n                            resolve(api.post('/imovel', newData));\n                        } catch (err) {\n                            console.error('Erro' + err);\n                            return reject('erro' + err);\n                        }\n                    }),\n                onRowUpdate: (newData, oldData) =>\n                    new Promise((resolve) => {\n                        setTimeout(() => {\n                            resolve();\n                            if (oldData) {\n                                setState((prevState) => {\n                                    const data = [...prevState.data];\n                                    data[data.indexOf(oldData)] = newData;\n                                    return { ...prevState, data };\n                                });\n                            }\n                        }, 600);\n                    }),\n                onRowDelete: (oldData) =>\n                    new Promise((resolve) => {\n                        setTimeout(() => {\n                            resolve();\n                            setState((prevState) => {\n                                const data = [...prevState.data];\n                                data.splice(data.indexOf(oldData), 1);\n                                return { ...prevState, data };\n                            });\n                        }, 600);\n                    }),\n            }}\n        />\n    );\n}\n"]},"metadata":{},"sourceType":"module"}