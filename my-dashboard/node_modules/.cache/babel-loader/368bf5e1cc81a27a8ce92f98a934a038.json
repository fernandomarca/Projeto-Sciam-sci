{"ast":null,"code":"var _jsxFileName = \"/home/fernando/\\xC1rea de Trabalho/DashBoardBootstrap/react/git/material-dashboard-react/my-dashboard/src/variables/exchart.js\";\n\n/* App.js */\nvar React = require('react');\n\nvar Component = React.Component;\n\nvar CanvasJSReact = require('./canvasjs.react'); //var CanvasJS = CanvasJSReact.CanvasJS;\n\n\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass Chart extends Component {\n  render() {\n    const options = {\n      title: {\n        text: \"Basic Column Chart\"\n      },\n      data: [{\n        // Change type to \"doughnut\", \"line\", \"splineArea\", etc.\n        type: \"column\",\n        dataPoints: [{\n          label: \"Apple\",\n          y: 10\n        }, {\n          label: \"Orange\",\n          y: 15\n        }, {\n          label: \"Banana\",\n          y: 25\n        }, {\n          label: \"Mango\",\n          y: 30\n        }, {\n          label: \"Grape\",\n          y: 28\n        }]\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CanvasJSChart, {\n      options: options\n      /* onRef={ref => this.chart = ref} */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nmodule.exports = Chart;","map":{"version":3,"sources":["/home/fernando/√Årea de Trabalho/DashBoardBootstrap/react/git/material-dashboard-react/my-dashboard/src/variables/exchart.js"],"names":["React","require","Component","CanvasJSReact","CanvasJSChart","Chart","render","options","title","text","data","type","dataPoints","label","y","module","exports"],"mappings":";;AAAA;AACA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,SAAS,GAAGF,KAAK,CAACE,SAAtB;;AACA,IAAIC,aAAa,GAAGF,OAAO,CAAC,kBAAD,CAA3B,C,CACA;;;AACA,IAAIG,aAAa,GAAGD,aAAa,CAACC,aAAlC;;AACA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAC1BI,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG;AACZC,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE;AADH,OADK;AAIZC,MAAAA,IAAI,EAAE,CACF;AACI;AACAC,QAAAA,IAAI,EAAE,QAFV;AAGIC,QAAAA,UAAU,EAAE,CACR;AAAEC,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,CAAC,EAAE;AAArB,SADQ,EAER;AAAED,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,CAAC,EAAE;AAAtB,SAFQ,EAGR;AAAED,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,CAAC,EAAE;AAAtB,SAHQ,EAIR;AAAED,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,CAAC,EAAE;AAArB,SAJQ,EAKR;AAAED,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,CAAC,EAAE;AAArB,SALQ;AAHhB,OADE;AAJM,KAAhB;AAkBA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAEP;AACxB;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAQH;;AA5ByB;;AA8B9BQ,MAAM,CAACC,OAAP,GAAiBX,KAAjB","sourcesContent":["/* App.js */\nvar React = require('react');\nvar Component = React.Component;\nvar CanvasJSReact = require('./canvasjs.react');\n//var CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nclass Chart extends Component {\n    render() {\n        const options = {\n            title: {\n                text: \"Basic Column Chart\"\n            },\n            data: [\n                {\n                    // Change type to \"doughnut\", \"line\", \"splineArea\", etc.\n                    type: \"column\",\n                    dataPoints: [\n                        { label: \"Apple\", y: 10 },\n                        { label: \"Orange\", y: 15 },\n                        { label: \"Banana\", y: 25 },\n                        { label: \"Mango\", y: 30 },\n                        { label: \"Grape\", y: 28 }\n                    ]\n                }\n            ]\n        }\n        return (\n            <div>\n                <CanvasJSChart options={options}\n                /* onRef={ref => this.chart = ref} */\n                />\n                {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n            </div>\n        );\n    }\n}\nmodule.exports = Chart;                    "]},"metadata":{},"sourceType":"module"}