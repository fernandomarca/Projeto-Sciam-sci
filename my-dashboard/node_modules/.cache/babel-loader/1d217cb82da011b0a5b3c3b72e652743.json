{"ast":null,"code":"var _jsxFileName = \"/home/fernando/\\xC1rea de Trabalho/projetoDashImoveis/my-dashboard/src/components/Charts/Bar/ChartBar3.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport api from '../../../services/api';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\n\nconst ChartBar3 = () => {\n  const [dataApi, setDataApi] = useState([]);\n  useEffect(() => {\n    load();\n  }, []);\n\n  async function load() {\n    const response = await api.get('/imovel');\n    setDataApi(response.data);\n  }\n\n  ; //reduce para extrair somente os bairros não repetidos\n\n  const bairrosReduce = dataApi.reduce((acc, ap) => {\n    if (!acc.includes(ap.bairro)) {\n      acc.push(ap.bairro);\n    }\n\n    return acc;\n  }, []).sort(); //Filtra por bairro escolhido array do bairrosReduce [\"Centro\",\"Cancelli\"]\n\n  const quantAptosBairro = [];\n\n  for (const key in bairrosReduce) {\n    const filterBairro = dataApi.filter(ap => ap.bairro.includes(bairrosReduce[key])); //console.log(`A quantidade de Apartamentos no bairro:${bairrosReduce[key]} é:${filterBairro.length}`)\n\n    quantAptosBairro.push(filterBairro.length);\n  } //gráfico tamanho médio de área por bairro\n  //somar as áreas por bairro e dividi pela quantidade de apartamentos\n  //Soma das áreas por bairro\n\n\n  const mediaAreaBairro = [];\n  bairrosReduce.map((bairro, index) => {\n    const apto = dataApi.filter(ap => ap.bairro.includes(bairrosReduce[index]));\n    let somaArea = apto.reduce((acc, apto, index) => {\n      acc = acc + apto.areaUtil; //console.log(index)\n\n      return acc;\n    }, 0);\n    return mediaAreaBairro.push((somaArea / apto.length).toFixed(1));\n  }).sort(); //console.log(mediaAreaBairro)\n\n  const barData = {\n    labels: [...bairrosReduce],\n    datasets: [{\n      label: 'Tamanho médio por Bairro',\n      backgroundColor: 'rgb(7, 155, 15,0.2)',\n      borderColor: 'rgb(7, 155, 15)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgb(7, 155, 15,0.4)',\n      hoverBorderColor: 'rgb(7, 155, 15)',\n      data: [...mediaAreaBairro]\n    }]\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: barData,\n    width: 100,\n    height: 70,\n    options: {\n      plugins: {\n        datalabels: {\n          color: 'black',\n          anchor: 'end',\n          align: 'end',\n          labels: {\n            title: {\n              font: {\n                weight: 'normal'\n              }\n            },\n            value: {\n              color: 'black'\n            }\n          }\n        }\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            beginAtZero: true\n          }\n        }]\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default ChartBar3;","map":{"version":3,"sources":["/home/fernando/Área de Trabalho/projetoDashImoveis/my-dashboard/src/components/Charts/Bar/ChartBar3.js"],"names":["React","useState","useEffect","Bar","api","ChartDataLabels","ChartBar3","dataApi","setDataApi","load","response","get","data","bairrosReduce","reduce","acc","ap","includes","bairro","push","sort","quantAptosBairro","key","filterBairro","filter","length","mediaAreaBairro","map","index","apto","somaArea","areaUtil","toFixed","barData","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","plugins","datalabels","color","anchor","align","title","font","weight","value","scales","yAxes","ticks","beginAtZero"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport api from '../../../services/api'\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\n\nconst ChartBar3 = () => {\n    const [dataApi, setDataApi] = useState([]);\n\n    useEffect(() => {\n        load();\n    }, []);\n\n    async function load() {\n        const response = await api.get('/imovel');\n        setDataApi(response.data)\n    };\n\n    //reduce para extrair somente os bairros não repetidos\n    const bairrosReduce = dataApi.reduce((acc, ap) => {\n        if (!acc.includes(ap.bairro)) {\n            acc.push(ap.bairro);\n        }\n        return acc;\n    }, []).sort()\n\n    //Filtra por bairro escolhido array do bairrosReduce [\"Centro\",\"Cancelli\"]\n    const quantAptosBairro = []\n    for (const key in bairrosReduce) {\n        const filterBairro = dataApi.filter((ap) => ap.bairro.includes(bairrosReduce[key]))\n        //console.log(`A quantidade de Apartamentos no bairro:${bairrosReduce[key]} é:${filterBairro.length}`)\n        quantAptosBairro.push(filterBairro.length)\n    }\n\n    //gráfico tamanho médio de área por bairro\n    //somar as áreas por bairro e dividi pela quantidade de apartamentos\n    //Soma das áreas por bairro\n    const mediaAreaBairro = []\n    bairrosReduce.map((bairro, index) => {\n        const apto = dataApi.filter((ap) => ap.bairro.includes(bairrosReduce[index]))\n        let somaArea = apto.reduce((acc, apto, index) => {\n            acc = (acc + apto.areaUtil);\n            //console.log(index)\n            return acc\n        }, 0)\n        return mediaAreaBairro.push((somaArea / apto.length).toFixed(1))\n    }).sort()\n\n    //console.log(mediaAreaBairro)\n\n    const barData = {\n        labels: [...bairrosReduce],\n        datasets: [\n            {\n                label: 'Tamanho médio por Bairro',\n                backgroundColor: 'rgb(7, 155, 15,0.2)',\n                borderColor: 'rgb(7, 155, 15)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgb(7, 155, 15,0.4)',\n                hoverBorderColor: 'rgb(7, 155, 15)',\n                data: [...mediaAreaBairro]\n            }\n        ]\n    };\n\n    return (\n        <div>\n            <Bar\n                data={barData}\n                width={100}\n                height={70}\n                options={{\n                    plugins: {\n                        datalabels: {\n                            color: 'black',\n                            anchor: 'end',\n                            align: 'end',\n                            labels: {\n                                title: {\n                                    font: {\n                                        weight: 'normal'\n                                    }\n                                },\n                                value: {\n                                    color: 'black'\n                                }\n                            }\n                        }\n                    },\n                    scales: {\n                        yAxes: [{\n                            ticks: {\n                                beginAtZero: true\n                            }\n                        }]\n                    }\n                }}\n            />\n        </div>\n    );\n}\n\nexport default ChartBar3"]},"metadata":{},"sourceType":"module"}